{"version":3,"sources":["views/dashboard/Map/google-maps/MarkerClusterer.js","views/dashboard/Map/google-maps/InfoBox.js","views/dashboard/Map/google-maps/StreetViewPanorma.js","views/dashboard/Map/google-maps/Marker.js","views/dashboard/Map/index.js","components/GoogleMapPolygon/index.js","components/Weather/util/weatherApi.js","components/Weather/SearchBar/SearchBar.js","components/Weather/WeeklyData/WeeklyData.js","components/Weather/GetGraph/GetGraph.js","components/WeatherData/index.js","components/Weather/TodayData/TodayData.js","components/Weather/App/App.js","components/CustomGoogleMap/SelectedMarkers.jsx","components/CustomGoogleMap/CustomGoogleMap.jsx"],"names":["MarkerClusterer","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","center","lat","lng","withStateHandlers","isOpen","onToggleOpen","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","defaultOptions","styles","fancyMapStyles","defaultPosition","google","maps","LatLng","options","closeBoxURL","enableEventPropagation","backgroundColor","opacity","padding","fontSize","fontColor","position","onClick","onCloseClick","require","withHandlers","onMarkerClustererClick","markerClusterer","clickedMarkers","getMarkers","console","log","length","averageCenter","enableRetinaIcons","gridSize","markers","map","marker","latitude","longitude","photo_id","mapTypeId","MapTypeId","SATELLITE","GoogleMap","StreetViewPanorama","OverlayView","getPixelPositionOffset","width","x","y","visible","mapPaneName","OVERLAY_LAYER","background","color","borderRadius","Map","useState","setMarkers","data","setData","weather","setWeather","seletedPoly","setSeletedPoly","suburbGeoBoundaries","suburbCentre","suburbName","suburbId","suburbList","setSuburbList","a","method","url","params","headers","axios","request","then","response","catch","error","useEffect","postData","getData","join","fetch","res","json","photos","Fragment","Tabs","defaultActiveKey","Tab","eventKey","title","Row","Col","xl","Card","Header","Title","as","Body","edit","isMarkerShown","isPostcodeHighlighted","isSuburbHighlighted","showTrafficLayer","mapType","p","i","boundaries","metaData","name","poly","prev","JSON","parse","stations","className","city","CO","NO2","OZONE","PM10","PM25","SO2","countryCode","division","placeName","state","updatedAt","AQI","aqiInfo","pollutant","concentration","category","temperature","windBearing","windSpeed","apparentTemperature","dewPoint","pressure","windGust","cloudCover","visibility","ozone","uvIndex","summary","icon","precipIntensity","Form","Group","controlId","Label","Control","type","placeholder","Text","Button","variant","sm","parseCoordinates","coordinates","result","index","push","Number","GoogleMapComponent","defaultCentre","centre","zoomControl","tilt","onPolygonComplete","stringify","getPath","getArray","drawingControl","drawingControlOptions","window","ControlPosition","TOP_CENTER","drawingModes","drawing","OverlayType","POLYGON","polygonOptions","fillColor","circleOptions","fillOpacity","strokeWeight","clickable","editable","zIndex","polygons","bind","labelAnchor","Point","labelStyle","individualGeoCode","autoUpdate","path","strokeColor","strokeOpacity","API_KEY","API_URL_CURRENT","API_URL_3HOURS","weatherApi","getTodayData","temp","parseInt","main","weatherDescription","description","weatherIcon","getIconUrl","country","sys","timezone","time","formatDate","dt","weekday","get3HoursData","list","max","temp_max","min","temp_min","weather_icon","getWeeklyData","forecastWeekly","uniqueDay","element","hasOwnProperty","Object","values","utc","format","dt_timezone","Date","toISOString","substr","getDate","hr","toLocaleTimeString","split","SearchBar","term","search","handleTermChange","this","onSearch","event","setState","target","value","React","Component","WeeklyData","weeklyData","overflow","forecast","src","alt","GetGraph","ResponsiveContainer","AreaChart","forecast3hrs","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","Math","random","Tooltip","Area","stroke","fill","label","WeatherData","DailyWeather","alignItems","justifyContent","textAlign","TodayData","noMore","Weather","updateTodayState","firstTime","dateTime","updateWeeklyState","slice","updateTerm","displayResult","warningBanner","SelectedMarkers","CustomGoogleMap","mapMarkers","previousMarkersRef","useRef","mapRef","drawingManagerRef","setCurrentPolygon","dataWeather","setDataWeather","dataC","_onPolygonClick","polygon","setMap","current","forEach","setOptions","getPaths","polygonBounds","bounds","point","getAt","getInfo","getWeather","bootstrapURLKeys","key","libraries","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","drawingManager","DrawingManager","_createGoogleMapDrawingManager","addListener","polygonCoords","LatLngBounds","coords","extend","getCenter","coor","myLatLng","Marker","setDrawingMode","_onPolygonComplete","defaultProps"],"mappings":"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","file":"static/js/12.6e14f53b.chunk.js","sourcesContent":["import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, withHandlers } from 'recompose';\n\nconst { MarkerClusterer } = require('react-google-maps/lib/components/addons/MarkerClusterer');\n\nconst MapWithAMarkerClusterer = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withHandlers({\n    onMarkerClustererClick: () => (markerClusterer) => {\n      const clickedMarkers = markerClusterer.getMarkers();\n      console.log(`Current clicked markers length: ${clickedMarkers.length}`);\n      console.log(clickedMarkers);\n    }\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={3} defaultCenter={{ lat: 25.0391667, lng: 121.525 }}>\n    <MarkerClusterer onClick={props.onMarkerClustererClick} averageCenter enableRetinaIcons gridSize={60}>\n      {props.markers.map((marker) => (\n        <Marker key={marker.photo_id} position={{ lat: marker.latitude, lng: marker.longitude }} />\n      ))}\n    </MarkerClusterer>\n  </GoogleMap>\n));\n\nexport default MapWithAMarkerClusterer;\n","/*global google*/\n\nimport InfoBox from 'react-google-maps/lib/components/addons/InfoBox';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, withStateHandlers } from 'recompose';\nimport fancyMapStyles from './fancy-map-styles.json';\n\nconst StyledMapWithAnInfoBox = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n    center: { lat: 28.5274851, lng: 77.1389452 }\n  }),\n  withStateHandlers(\n    () => ({\n      isOpen: false\n    }),\n    {\n      onToggleOpen:\n        ({ isOpen }) =>\n        () => ({\n          isOpen: !isOpen\n        })\n    }\n  ),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={5} defaultCenter={props.center} defaultOptions={{ styles: fancyMapStyles }}>\n    <InfoBox\n      defaultPosition={new google.maps.LatLng(props.center.lat, props.center.lng)}\n      options={{ closeBoxURL: ``, enableEventPropagation: true }}\n    >\n      <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\n        <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>Hello, India!</div>\n      </div>\n    </InfoBox>\n    <Marker position={{ lat: 23.0204978, lng: 72.4396583 }} onClick={props.onToggleOpen}>\n      {props.isOpen && (\n        <InfoBox onCloseClick={props.onToggleOpen} options={{ closeBoxURL: ``, enableEventPropagation: true }}>\n          <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\n            <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>Hello, Gujarat!</div>\n          </div>\n        </InfoBox>\n      )}\n    </Marker>\n  </GoogleMap>\n));\n\nexport default StyledMapWithAnInfoBox;\n","const { compose, withProps } = require('recompose');\n\nconst { withScriptjs, withGoogleMap, GoogleMap, StreetViewPanorama, OverlayView } = require('react-google-maps');\n\nconst getPixelPositionOffset = (width, height) => ({\n  x: -(width / 2),\n  y: -(height / 2)\n});\n\nconst StreetViewPanormaWithAnOverlayView = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n    center: { lat: 49.2853171, lng: -123.1119202 }\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={8} defaultCenter={props.center}>\n    <StreetViewPanorama defaultPosition={props.center} visible>\n      <OverlayView\n        position={{ lat: 49.28590291211115, lng: -123.11248166065218 }}\n        mapPaneName={OverlayView.OVERLAY_LAYER}\n        getPixelPositionOffset={getPixelPositionOffset}\n      >\n        <div style={{ background: `red`, color: `white`, padding: 5, borderRadius: `50%` }}>OverlayView</div>\n      </OverlayView>\n    </StreetViewPanorama>\n  </GoogleMap>\n));\n\nexport default StreetViewPanormaWithAnOverlayView;\n","import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose } from 'recompose';\n\nconst MapWithAMarker = compose(\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={8} defaultCenter={{ lat: 28.5274851, lng: 77.1389452 }}\n  options={map => ({ mapTypeId: map.MapTypeId.SATELLITE })}\n  \n  >\n    <Marker position={{ lat: 28.5274851, lng: 77.1389452 }} />\n  </GoogleMap>\n\n  \n));\n\nexport default MapWithAMarker;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Tabs, Tab, Form, Button, Modal, } from 'react-bootstrap';\nimport InfoBox from './google-maps/InfoBox';\nimport MarkerClusterer from './google-maps/MarkerClusterer';\nimport Marker from './google-maps/Marker';\nimport StreetViewPanorma from './google-maps/StreetViewPanorma';\n// import ModuleNotification from '../../components/Widgets/Statistic/Notification';\n\nimport fetch from 'isomorphic-fetch';\nimport CustomGoogleMap from '../../../components/CustomGoogleMap';\nimport Weather from '../../../components/Weather/App/App';\nimport GoogleMapComponent from '../../../components/GoogleMapPolygon';\nimport axios from 'axios';\n\nconst Map = () => {\n  const [markers, setMarkers] = useState([]);\n  const [data, setData] = useState(null);\n  const [weather, setWeather] = useState(null);\n  const [seletedPoly, setSeletedPoly] = useState(null);\n  const suburbList2 = [\n    {\n     suburbGeoBoundaries: [\n   \n   \n       {lat: 41.52443939923662, lng: -4.149101031315676},\n       {lat: 41.52440726966853, lng: -4.146923077595583},\n       {lat: 41.523226496975425, lng: -4.146890891087405},\n       {lat: 41.53341927766237, lng: -4.249465811741702},\n     \n     \n     ],\n     suburbCentre:      {lat: 41.52341124514521, lng: -4.1494443540695825},\n     suburbName: '',\n     suburbId: '1',\n     color:'red'\n   \n   },\n   \n   \n    {\n     suburbGeoBoundaries: [\n   \n       {lat: 41.52462768315863, lng: -4.152233851445071},\n    {lat: 41.52453129468704, lng: -4.150635254872195},\n    {lat: 41.52529436615597, lng: -4.15050650883948},\n    {lat: 41.525310430721746, lng: -4.152201664936892},\n    {lat: 41.525310430721746, lng: -4.152201664936892},\n     ],\n     suburbCentre: { lat: 46.070955, lng: 36.640032 },\n     suburbName: '',\n     suburbId: '2',\n     color:'orange'\n   \n   },\n   \n   \n    {\n     suburbGeoBoundaries: [\n   \n       {lat: 41.52527830158619, lng: -4.15050650883948},\n       {lat: 41.52526223701245, lng: -4.146955264103762},\n       {lat: 41.52440277650155, lng: -4.146912348759524},\n       {lat: 41.524523262307916, lng: -4.150635254872195},\n       {lat: 41.524523262307916, lng: -4.150635254872195},\n      \n     ],\n     suburbCentre: { lat: 46.070955, lng: 36.640032 },\n     suburbName: '',\n     suburbId: '3',\n     color:'green'\n   \n   },\n   \n    {\n     suburbGeoBoundaries: [\n   \n       {lat: 41.52353976530007, lng: -4.152405512822024},\n       {lat: 41.52461611157581, lng: -4.15224458028113},\n       {lat: 41.524447431626115, lng: -4.149090302479617},\n       {lat: 41.52341124514521, lng: -4.1494443540695825},\n       {lat: 41.52341124514521, lng: -4.1494443540695825},\n      \n     ],\n     suburbCentre: { lat: 46.070955, lng: 36.640032 },\n     suburbName: '',\n     suburbId: '4',\n     color:'yellow'\n   \n   },\n   \n    {\n     suburbGeoBoundaries: [\n   \n       {lat: 41.52205373542227, lng: -4.1499164228562035},\n       {lat: 41.52341124514521, lng: -4.1494443540695825},\n       {lat: 41.52323452951551, lng: -4.146901619923464},\n       {lat: 41.521644067131, lng: -4.146837246907107},\n       {lat: 41.521644067131, lng: -4.146837246907107},\n     ],\n     suburbCentre: { lat: 46.070955, lng: 36.640032 },\n     suburbName: '',\n     suburbId: '5',\n     color:'purple'\n   \n   },\n   \n   \n    {\n     suburbGeoBoundaries: [\n   \n       {lat: 41.52353976530007, lng: -4.152405512822024},\n       {lat: 41.52341124514521, lng: -4.149455082905642},\n       {lat: 41.52205373542227, lng: -4.149894965184084},\n       {lat: 41.522407172648436, lng: -4.15251280118263},\n       {lat: 41.52353976530007, lng: -4.152405512822024},\n     ],\n     suburbCentre: { lat: 46.070955, lng: 36.640032 },\n     suburbName: '',\n     suburbId: '6',\n     color:'red'\n   \n   },\n   \n   \n   \n   \n       {\n         suburbGeoBoundaries: [\n   \n           {lat: 41.56034603312307, lng: -4.557895287480848}  ,\n           {lat: 41.55901338282375, lng: -4.555620774236219},\n           {lat: 41.559639571326784, lng: -4.554032906499403},\n           {lat: 41.5610685428811, lng: -4.55611430069496},\n           {lat: 41.56068320534873, lng: -4.557809456792372},\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n       {\n         suburbGeoBoundaries: [\n   \n           {lat: 41.56108459856174, lng: -4.556135758367079}  ,\n           {lat: 41.559655627362474, lng: -4.554032906499403},\n           {lat: 41.56020153020212, lng: -4.552487954106825},\n           {lat: 41.56169471147056, lng: -4.554183110204237},\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n       {\n         suburbGeoBoundaries: [\n   \n   \n           {lat: 41.56016941839801, lng: -4.5524450387625865},\n           {lat: 41.56087587440212, lng: -4.550513848271864},\n           {lat: 41.56232087399258, lng: -4.552209004369276},\n           {lat: 41.561710766995645, lng: -4.554204567876356},\n          \n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n       {\n         suburbGeoBoundaries: [\n   \n           {lat: 41.562336929362075, lng: -4.552209004369276},\n           {lat: 41.5635410707055, lng: -4.548389538732069},\n           {lat: 41.56272225703333, lng: -4.547574147191542},\n           {lat: 41.56159837823634, lng: -4.5513721551566295},\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n       {\n         suburbGeoBoundaries: [\n   \n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n       {\n         suburbGeoBoundaries: [\n   \n   \n   \n           {lat: 41.5626901464818, lng: -4.547595604863661}  ,\n           {lat: 41.562112153826064, lng: -4.547037705388563},\n           {lat: 41.56087587440212, lng: -4.550492390599745},\n           {lat: 41.56159837823634, lng: -4.551393612828749},\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n       {\n         suburbGeoBoundaries: [\n   \n   \n           {lat: 41.55901338282375, lng: -4.555620774236219}  ,\n           {lat: 41.56021758609817, lng: -4.552487954106825},\n           {lat: 41.55954323502893, lng: -4.5513721551566295},\n           {lat: 41.558306906459336, lng: -4.5542689408927135},\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n       {\n         suburbGeoBoundaries: [\n           {lat: 41.55954323502893, lng: -4.55135069748451}  ,\n           {lat: 41.5607634841908, lng: -4.547981842961805},\n           {lat: 41.561485989281564, lng: -4.548797234502333},\n           {lat: 41.560153362489984, lng: -4.552423581090467},\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n       {\n         suburbGeoBoundaries: [\n         \n    {lat: 41.561485989281564, lng: -4.548818692174452},\n    {lat: 41.562128209247426, lng: -4.547037705388563},\n    {lat: 41.56143782252683, lng: -4.546458348241346},\n    {lat: 41.56074742843037, lng: -4.547981842961805},\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n   \n       {\n         suburbGeoBoundaries: [\n           { lat: 40.692654954386214, lng: -4.739171586330515 },\n           { lat: 40.692391072983476, lng: -4.740021999492485 },\n           { lat: 40.69201867541336, lng: -4.739680845228606 },\n           { lat: 40.692157226305824, lng: -4.738926958521945 },\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'blue'\n   \n       },\n       {\n         suburbGeoBoundaries: [\n           { lat: 40.69323784416681, lng: -4.740167697269528 },\n           { lat: 40.692311295862794, lng: -4.739801755818946 },\n           { lat: 40.69225036101428, lng: -4.7405571270392395 },\n           { lat: 40.69316003843918, lng: -4.740829525140755 }\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'purple'\n       },\n       {\n         suburbGeoBoundaries: [\n           { lat: 40.693389553828546, lng: -4.740667778638483 },\n           { lat: 40.693768986344715, lng: -4.741018091113831 },\n           { lat: 40.69431020216909, lng: -4.741061532618944 },\n           { lat: 40.69373194791357, lng: -4.741945349629561 },\n           { lat: 40.6928731131761, lng: -4.7419920329012095 },\n           { lat: 40.692755653440216, lng: -4.741507513714198 }\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'green'\n       },\n       {\n         suburbGeoBoundaries: [\n           { lat: 40.69385474032019, lng: -4.742034026236099 },\n           { lat: 40.69462208148476, lng: -4.740902264999051 },\n           { lat: 40.695668842718426, lng: -4.740407084424107 },\n           { lat: 40.69630003488739, lng: -4.740553562111047 },\n           { lat: 40.695131555237516, lng: -4.743080603107985 }\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1',\n         color:'red'\n       },\n       {\n         suburbGeoBoundaries: [\n          {lat: 40.69347556658659, lng: -4.740739131363571}, \n          {lat: 40.693060695817586, lng: -4.741672540100754},\n           {lat: 40.69263768766786, lng: -4.74026169815892},\n          {lat: 40.69325592944244, lng: -4.740143680962265},\n           {lat: 40.69333727661729, lng: -4.7404816392981415},\n           {lat: 40.693422691043985, lng: -4.7406318430029755}\n   \n           \n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1'\n       },\n      \n     \n       {\n         suburbGeoBoundaries: [\n           { lat: 44.337799, lng: 36.640032 },\n           { lat: 44.337799, lng: 32.142806 },\n           { lat: 46.070955, lng: 32.142806 },\n           { lat: 46.070955, lng: 36.640032 }\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1'\n       },\n       {\n         suburbGeoBoundaries: [\n           { lat: 44.337799, lng: 36.640032 },\n           { lat: 44.337799, lng: 32.142806 },\n           { lat: 46.070955, lng: 32.142806 },\n           { lat: 46.070955, lng: 36.640032 }\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1'\n       },\n       {\n         suburbGeoBoundaries: [\n           { lat: 42.337799, lng: 34.640032 },\n           { lat: 42.337799, lng: 30.142806 },\n           { lat: 43.070955, lng: 30.142806 },\n           { lat: 43.070955, lng: 34.640032 }\n         ],\n         suburbCentre: { lat: 46.070955, lng: 36.640032 },\n         suburbName: '',\n         suburbId: '1'\n       }\n   \n     ]\n  const [suburbList,setSuburbList]= useState(suburbList2);\n  async function postData() {\n\n    //alert(JSON.stringify(seletedPoly))\n    const options = {\n      method: 'GET',\n      url: 'https://api.ambeedata.com/latest/by-lat-lng',\n      params:seletedPoly?.suburbCentre,\n      headers: {'x-api-key': '73adc3f9bac7b975765041223b6c3b6f7c23e2bb7c09ca7dfef3a8728ed69c7f', 'Content-type': 'application/json'}\n    };\n    axios.request(options).then(function (response) {\n    // alert(JSON.stringify(response))\n      setData(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n  async function getData() {\n\n //  alert(JSON.stringify(seletedPoly?.suburbCentre.lat))\n    const options = {\n      method: 'GET',\n      url: 'https://api.ambeedata.com/weather/latest/by-lat-lng',\n      params:seletedPoly?.suburbCentre,\n      headers: {'x-api-key': '73adc3f9bac7b975765041223b6c3b6f7c23e2bb7c09ca7dfef3a8728ed69c7f', 'Content-type': 'application/json'}\n    };\n    axios.request(options).then(function (response) {\n    // alert(JSON.stringify(response))\n    setWeather(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  useEffect(()=>{\n    postData() \n    getData()\n  },[seletedPoly])\n\n  useEffect(() => {\n    const url = [\n      // Length issue\n      `https://gist.githubusercontent.com`,\n      `/farrrr/dfda7dd7fccfec5474d3`,\n      `/raw/758852bbc1979f6c4522ab4e92d1c92cba8fb0dc/data.json`\n    ].join('');\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setMarkers(data.photos);\n      });\n\n    return () => {\n      setMarkers([]);\n    };\n  }, []);\n\n  const onClick = (poly)=>{\n\n    setSeletedPoly(( {\n      suburbGeoBoundaries:poly,\n      suburbCentre: poly[0],\n      suburbName: '',\n      suburbId: '1'\n    }));\n    setSuburbList(prev=>[\n      ...prev,{\n        suburbGeoBoundaries:poly,\n        suburbCentre: poly[0],\n        suburbName: '',\n        suburbId: '1'\n      }\n    ]);\n  \n  }\n  return (\n    <React.Fragment>\n \n      <Tabs defaultActiveKey=\"Create Polygon\">\n        <Tab eventKey=\"Create Polygon\" title=\"Create Polygon\">\n          <Row>\n            <Col xl={8}>\n              <Card>\n                <Card.Header>\n                  <Card.Title as=\"h5\">Create Polygon</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                <GoogleMapComponent\n                edit\n            isMarkerShown={true}\n            isPostcodeHighlighted={true}\n            isSuburbHighlighted={true}\n            showTrafficLayer={false}\n            defaultZoom={11}\n            loadingElement={<div style={{ height:383 }} />}\n            containerElement={<div style={{ height:383, width: \"100%\" }} />}\n            mapElement={<div style={{ height:383, width: \"100%\" }} />}\n            mapType={\"hybrid\"}\n            defaultZoom={15}\n            tilt={45}\n            defaultCentre={\n              {lat: 41.52341927766237, lng: -4.149465811741702}}\n            polygons={\n              suburbList.map((p, i) => {\n                return ({\n                  color:p?.color?p.color:'yellow',\n                  boundaries: p.suburbGeoBoundaries,\n                  suburbCentre: p.suburbCentre,\n                  metaData: {\n                    name: `${p.suburbName}`,\n                    suburbId: `${p.suburbId}`\n                  }\n                })\n              })\n            }\n          onPolygonComplete = {(poly)=>{onClick(JSON.parse(poly))}}\n            selectedMarker={ { lat: 40.693389553828546, lng: -4.740667778638483 }}\n            onClick={(poly) => {\n              setSeletedPoly(( {\n                suburbGeoBoundaries:poly.boundaries,\n                suburbCentre: poly.boundaries[0],\n                suburbName: '',\n                suburbId: '1'\n              }));\n          }}\n\n          ></GoogleMapComponent>\n                  {/* <CustomGoogleMap  getWeather={(data) => { setWeather(data) }} getInfo={(data) => { setData(data) }} /> */}\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col xl={4}>\n              <Card>\n                <Card.Header>\n                  <Card.Title as=\"h5\">Polygon Information</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                  {data?.stations ?\n                    <div className='d-flex'>\n                      <Col xl={6}>\n                        <div >\n                          <p>\n                            city :\n                            {data?.stations[0]?.city}\n                          </p>\n                          <p>\n                            CO :\n                            {data?.stations[0]?.CO}\n                          </p>\n                          <p>\n                            NO2 :\n                            {data?.stations[0]?.NO2}\n                          </p>\n                          <p>\n                            OZONE :\n                            {data?.stations[0]?.OZONE}\n                          </p>\n                          <p>\n                            PM10 :\n                            {data?.stations[0]?.PM10}\n                          </p>\n                          <p>\n                            PM25 :\n                            {data?.stations[0]?.PM25}\n                          </p>\n                          <p>\n                            SO2 :\n                            {data?.stations[0]?.SO2}\n                          </p>\n                          <p>\n                            countryCode :\n                            {data?.stations[0]?.countryCode}\n                          </p>\n                          <p>\n                            division :\n                            {data?.stations[0]?.division}\n                          </p>\n                        </div>\n                      </Col>\n                      <Col xl={6}>\n                        <div >\n\n\n                          <p>\n                            placeName :\n                            {data?.stations[0]?.placeName}\n                          </p>\n                          <p>\n                            state :\n                            {data?.stations[0]?.state}\n                          </p>\n                          <p>\n                            updatedAt :\n                            {data?.stations[0]?.updatedAt}\n                          </p>\n                          <p>\n                            AQI :\n                            {data?.stations[0]?.AQI}\n                          </p>\n                          <p>\n                            pollutant :\n                            {data?.stations[0]?.aqiInfo.pollutant}\n                          </p>\n                          <p>\n                            concentration :\n                            {data?.stations[0]?.aqiInfo.concentration}\n                          </p>\n                          <p>\n                            category :\n                            {data?.stations[0]?.aqiInfo.category}\n                          </p>\n                        </div>\n                      </Col>\n\n\n                    </div> : null\n                  }\n                  {\n                    weather?.data ?\n                      <div className='d-flex'>\n                        <Col xl={6}>\n                          <p>\n                            temperature :\n                            {weather.data.temperature}\n                          </p>\n                          <p>\n                            windBearing :\n                            {weather.data.windBearing}\n                          </p>\n                          <p>\n                            windSpeed :\n                            {weather.data.windSpeed}\n                          </p>\n                          <p>\n                            apparentTemperature :\n                            {weather.data.apparentTemperature}\n                          </p>\n                          <p>\n                            dewPoint :\n                            {weather.data.dewPoint}\n                          </p>\n\n                        </Col>\n                        <Col xl={6}>\n                          <p>\n                            pressure :\n                            {weather.data.pressure}\n                          </p>\n                          <p>\n                            windGust :\n                            {weather.data.windGust}\n                          </p>\n                          <p>\n                            dewPoint :\n                            {weather.data.dewPoint}\n                          </p>\n                          <p>\n                            cloudCover :\n                            {weather.data.cloudCover}\n                          </p>\n                          <p>\n                            visibility :\n                            {weather.data.visibility}\n                          </p>\n                          <p>\n                            ozone :\n                            {weather.data.ozone}\n                          </p>\n                          <p>\n                            uvIndex :\n                            {weather.data.uvIndex}\n                          </p>\n                          <p>\n                            summary :\n                            {weather.data.summary}\n                          </p>\n                          <p>\n                            Weather :\n                            {weather.data.icon}\n                          </p>\n                          <p>\n                            precipIntensity :\n                            {weather.data.precipIntensity}\n                          </p>\n                        </Col>\n                      </div> : null\n                  }\n\n               <Form>\n                    <Form.Group controlId=\"Name\">\n                      <Form.Label>Polygon Name</Form.Label>\n                      <Form.Control type=\"Name\" placeholder=\"Enter Name\" />\n                      <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n                    </Form.Group>\n\n\n\n                    <Button variant=\"primary\">Create</Button>\n                  </Form>\n                </Card.Body>\n              </Card>\n            </Col>\n\n          </Row>\n          {data?.stations ? <Weather city={data?.stations ? data?.stations[0]?.city : 'beirut'} countryCode={data?.stations ? data?.stations[0]?.countryCode : 'beirut'} /> : null}\n        </Tab>\n\n        <Tab eventKey=\"Show all Polygon\" title=\"Show all Polygons\">\n\n        </Tab>\n      </Tabs>\n      <Row>\n        <Col sm={12}>\n          {/* <ModuleNotification\n            message=\"For more info please check the components's official documentation\"\n            link=\"https://www.npmjs.com/package/react-google-maps\"\n          /> */}\n        </Col>\n      </Row>\n\n    </React.Fragment>\n  );\n};\n\nexport default Map;\n","import React, { Fragment, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    GoogleMap,\n    Polygon,\n    withScriptjs,\n    withGoogleMap,\n    TrafficLayer,\n    InfoWindow\n} from \"react-google-maps\";\nimport MarkerWithLabel from 'react-google-maps/lib/components/addons/MarkerWithLabel';\nimport DrawingManager from \"react-google-maps/lib/components/drawing/DrawingManager\";\nimport compose from \"recompose/compose\";\nimport withProps from \"recompose/withProps\";\n\nconst parseCoordinates = (coordinates) => {\n    var result = [];\n    for (var index = 0; index < coordinates.length - 1; index++) {\n        result.push({\n            lat: Number(coordinates[index].lat),\n            lng: Number(coordinates[index].lng),\n        });\n    }\n    return result;\n};\n\nconst GoogleMapComponent = function Map() {\n   \n    return (compose(\n        withProps((props) => ({\n            googleMapURL:\n                \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places\",\n            loadingElement: props.loadingElement,\n            containerElement: props.containerElement,\n            mapElement: props.mapElement\n        })),\n        withScriptjs,\n        withGoogleMap\n    )((props) => (\n\n        <GoogleMap\n            mapTypeId={props.mapType}\n            defaultCenter={{\n                lat: props.defaultCentre ? Number(props.defaultCentre.lat) : -33.83001256324069,\n                lng: props.defaultCentre ? Number(props.defaultCentre.lng) : 151.182493988605,\n            }}\n            //note different spellings of centre and center.\n            {...props.centre && { center: props.centre }}\n            defaultZoom={props.defaultZoom}\n            zoomControl={false}\n            tilt={props.tilt}\n           \n        >\n           \n           {\n               props?.edit?\n               <DrawingManager\n               onPolygonComplete={(poly=>{props.onPolygonComplete(JSON.stringify(poly.getPath().getArray()))})}\n       // defaultDrawingMode={window.google.maps.drawing.OverlayType.POLYLINE}\n        defaultOptions={{\n          drawingControl: true,\n          drawingControlOptions: {\n            position: window.google.maps.ControlPosition.TOP_CENTER,\n            drawingModes: [\n            //  window.google.maps.drawing.OverlayType.CIRCLE,\n              window.google.maps.drawing.OverlayType.POLYGON,\n    \n             // window.google.maps.drawing.OverlayType.RECTANGLE,\n            ],\n          },\n          polygonOptions: {\n              fillColor: '#000000',\n              fillColor: 'green',\n              fillOpacity: 0.5,\n              strokeWeight: 3,\n              editable: true,\n              zIndex: 1\n            },\n          circleOptions: {\n            fillColor: `red`,\n            fillOpacity: 1,\n            strokeWeight: 5,\n            clickable: false,\n            editable: true,\n            zIndex: 1,\n          },\n        }}\n      />:null\n           }\n            {props.isMarkerShown && (\n                props.polygons &&\n                props.polygons.map((poly, i) => {\n                    const onClick = props.onClick.bind(this, poly);\n                    return (\n                        <MarkerWithLabel\n                            position={{\n                                lat: poly.suburbCentre.lat,\n                                lng: poly.suburbCentre.lng,\n                            }}\n                            onClick={onClick}\n                            labelAnchor={new window.google.maps.Point(0, 0)}\n                            labelStyle={{\n                                backgroundColor: \"white\",\n                                fontSize: \"12px\",\n                                padding: \"8px\",\n                                borderRadius: \"5px\"\n                            }}\n                        >\n                            <div>\n                                {/* {poly.metaData.name} */}\n                                </div>\n                        </MarkerWithLabel>\n\n                    );\n                }\n                ))\n            }\n  \n            {props.individualGeoCode &&\n                <MarkerWithLabel\n                    position={{\n                        lat: props.individualGeoCode.lat,\n                        lng: props.individualGeoCode.lng,\n                    }}\n                    labelAnchor={new window.google.maps.Point(0, 0)}\n                    labelStyle={{\n                        backgroundColor: \"white\",\n                        fontSize: \"12px\",\n                        padding: \"8px\",\n                        borderRadius: \"5px\"\n                    }}\n                >\n                    <div>{'props.markerTag'}</div>\n                </MarkerWithLabel>\n            }\n\n            {props.showTrafficLayer && <TrafficLayer autoUpdate />}\n\n            {(props.isSuburbHighlighted && props.polygons) && (\n                props.polygons.map((poly, i) => {\n                    const onClick = props.onClick.bind(this, poly)\n\n                    return (\n                        <Polygon\n                        title={'as'}\n                            path={parseCoordinates(poly.boundaries)}\n                            key={i}\n                            editable={props.edit}\n                            options={{\n                                fillColor: poly?.color?poly?.color:'yellow',\n                                fillOpacity: 0.4,\n                                strokeColor: \"#d35400\",\n                                strokeOpacity: 0.8,\n                                strokeWeight: 3\n                            }}\n                            onClick={() => { onClick(poly); }}\n                        >\n                             \n                             <div>{poly?.metaData?.name}</div>\n                        </Polygon>\n                        \n                    );\n                })\n            )}\n\n        </GoogleMap>\n\n    )));\n}()\n\nexport default GoogleMapComponent;","const API_KEY = \"32a5bb7b9aa1126387e06acad817149e\";\nconst API_URL_CURRENT = `https://api.openweathermap.org/data/2.5/weather?appid=${API_KEY}&units=metric`;\nconst API_URL_3HOURS = `https://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}&units=metric`;\n// It calls the API from openweathermap\n\n// Get the TODAY data\nconst weatherApi = {\n  getTodayData(city) {\n    //Get the CURRENT data\n    //console.log(API_URL_CURRENT + \"&q=\" + city);\n    return fetch(API_URL_CURRENT + \"&q=\" + city)\n      .then(response => {\n        return response.json();\n      })\n      .then(data => ({\n        temp: parseInt(data.main.temp, 0),\n        weatherDescription: data.weather[0].description,\n        weatherIcon: this.getIconUrl(data.weather[0].icon),\n        country: data.sys.country,\n        timezone: data.timezone,\n        time: this.formatDate(data.dt, data.timezone, \"time\"),\n        weekday: this.formatDate(data.dt, data.timezone, \"weekday\"),\n        city: data.name\n      }))\n      .catch(error => {\n        return [];\n      });\n  },\n\n  //Get the 3 hours data (forecast). The API sends 40 items on this array\n  get3HoursData(city) {\n    //console.log(API_URL_3HOURS + \"&q=\" + city);\n    return fetch(API_URL_3HOURS + \"&q=\" + city)\n      .then(response => {\n        return response.json();\n      })\n      .then(data =>\n        //Get only the first 8 results\n        data.list.map(list => ({\n          max: parseInt(list.main.temp_max, 0),\n          min: parseInt(list.main.temp_min, 0),\n          time: this.formatDate(list.dt, data.city.timezone, \"time\"),\n          weekday: this.formatDate(list.dt, data.city.timezone, \"weekday\"),\n          weather_icon: this.getIconUrl(list.weather[0].icon)\n        }))\n      )\n      .catch(error => {\n        return [];\n      });\n  },\n\n  //Get the forecast for the next 5 days\n  //Since the free api does not have a daily element.\n  //This routine will parse the 3hrs forecast to pick the next 5 days.\n  // and it finds the min and max temperature\n  getWeeklyData(forecastWeekly) {\n    var uniqueDay = [];\n\n    forecastWeekly.map(element => {\n      var isDuplicated = uniqueDay.hasOwnProperty(element.weekday);\n      if (isDuplicated) {\n        if (element.min < uniqueDay[element.weekday].min) {\n          uniqueDay[element.weekday].min = element.min;\n        }\n        if (element.max > uniqueDay[element.weekday].max) {\n          uniqueDay[element.weekday].max = element.max;\n        }\n      } else {\n        uniqueDay[element.weekday] = element;\n      }\n    });\n    //Return an array instead of object\n    return Object.values(uniqueDay);\n  },\n\n  formatDate(utc, timezone, format) {\n    //Parms:\n    //  utc     : utc time in seconds\n    //  timezone: timezone in seconds\n    //  format  :\n    //            - day: get the day of the month: 1,2,3,4...\n    //            - time: get the time as am/pm: 1:00 am, 9:00 pm\n    //            - weekday: get the long weekday name: Monday, Tuesday...\n    /*\n    console.log(\"Timezone: \" + timezone);\n    console.log(\"UTC: \" + utc);\n    console.log(\"Format: \" + format);\n    console.log(\"Sem timezone:  \" + new Date(utc * 1e3).toISOString());\n    console.log(\"Com timezone:  \", dt_timezone);\n    console.log(\"*------------------------*\");\n    */\n    //dt_timezone format: 2019-10-23T18:00:00.000Z\n\n    const dt_timezone = new Date(utc * 1e3 + timezone * 1e3).toISOString();\n    const dt = new Date(dt_timezone.substr(0, 19));\n    if (format === \"day\") {\n      return new dt.getDate();\n    } else if (format === \"time\") {\n      const hr = parseInt(dt_timezone.substr(11, 2), 0);\n      if (hr === 12) {\n        return \"12pm\";\n      } else if (hr === 0) {\n        return \"12am\";\n      } else {\n        return hr > 12 ? hr - 12 + \"pm\" : hr + \"am\";\n      }\n    } else if (format === \"weekday\") {\n      return dt.toLocaleTimeString(\"en-us\", { weekday: \"long\" }).split(\" \")[0];\n    }\n  },\n\n  getIconUrl(icon) {\n    return `http://openweathermap.org/img/wn/${icon}@2x.png`;\n  }\n};\n\nexport default weatherApi;\n","import React from \"react\";\nimport \"./SearchBar.css\";\n\n// So far it's possible to search only thgough city name\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"beirut\"\n    };\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n\n  // This search method actually runs a search method from\n  // the APP component. That's why: this.PROPS....\n  componentDidMount(){\n    this.search()\n  }\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n\n  handleTermChange(event) {\n    this.setState({ term: event.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <div className=\"container w-75 searchBar\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"City...\"\n            aria-label=\"City...\"\n            aria-describedby=\"button-addon2\"\n            onChange={this.handleTermChange}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-success\"\n              type=\"button\"\n              onClick={this.search}\n            >\n              Search\n            </button>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./WeeklyData.css\";\nimport weatherApi from \"../util/weatherApi\";\n\n// Get the weekly data, it creates a timeline per:\n//    - week day, icon, max and min temp\nclass WeeklyData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getWeeklyData = this.getWeeklyData.bind(this);\n  }\n\n  getWeeklyData(forecastWeekly) {\n    return weatherApi.getWeeklyData(forecastWeekly);\n  }\n\n  render() {\n    const weeklyData = this.getWeeklyData(this.props.forecastWeekly);\n    return (\n      <div className=\"row rowWeeklyData\">\n        <div className=\"table-responsive\">\n          <table className=\"table table-borderless\">\n            <tbody   style={{overflow:'auto'}}>\n              <tr>\n                {weeklyData.map(forecast => {\n                  return <td key={forecast.weekday}>{forecast.weekday}</td>;\n                })}\n              </tr>\n              <tr>\n                {weeklyData.map(forecast => {\n                \n                  return (\n                    <td key={forecast.weekday} className=\"weeklyData\">\n                      <img src={forecast.weather_icon} alt=\"\"  />\n                    </td>\n                  );\n                })}\n              </tr>\n              <tr>\n                {weeklyData.map(forecast => {\n                  return (\n                    <td key={forecast.weekday} className=\"weeklyData\">\n                      {forecast.max}° | {forecast.min}°\n                    </td>\n                  );\n                })}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeeklyData;\n","import React from \"react\";\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from \"recharts\";\n\n// It gets the graph:\n//  - it's based on MAX temp\n//  - eah 3 hrs for the next 24 hrs\nclass GetGraph extends React.Component {\n  render() {\n    return (\n      <ResponsiveContainer width=\"100%\" height={150}>\n        <AreaChart\n          data={this.props.forecast3hrs}\n          margin={{ top: 20, right: 30, left: 25, bottom: 0 }}\n        >\n          <defs>\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <XAxis key={Math.random()} dataKey=\"time\" />\n          <Tooltip />\n          <Area\n            type=\"monotone\"\n            dataKey=\"max\"\n            stroke=\"#8884d8\"\n            fillOpacity={1}\n            fill=\"url(#colorUv)\"\n            label={{\n              fill: \"black\",\n              fontSize: 15,\n              position: \"top\"\n            }}\n          />\n           <Area\n            type=\"monotone\"\n            dataKey=\"max\"\n            stroke=\"#8884d8\"\n            fillOpacity={1}\n            fill=\"url(#colorUv)\"\n            label={{\n              fill: \"black\",\n              fontSize: 15,\n              position: \"top\"\n            }}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default GetGraph;\n","import React from 'react'\n\nexport default function WeatherData() {\n\nconst DailyWeather = () =>{\n    return(\n        <div style={{width:'60px',alignItems:'center',justifyContent:'center',textAlign:'center'}}>\n      \n          <div>\n          <p>\n               Clear Sky\n            </p>\n          </div>\n          <div>\n          <p>\n               33\n            </p>\n          </div>\n          <div>\n          <p>\n               0.00mm\n            </p>\n          </div>\n          <div>\n          <p>\n            7.1m/s\n            </p>\n          </div>\n          <div>\n          <p>\n              1015hPa\n            </p>\n          </div>\n          <div>\n          <p>\n              64%\n            </p>\n          </div>\n          <div>\n          <p>\n              25.3\n            </p>\n          </div>\n          <div>\n          <p>\n             8\n            </p>\n          </div>\n          <div>\n          <p>\n             0%\n            </p>\n          </div>\n        </div>\n    )\n}\n\n\n\n  return (\n    <div>\n        <DailyWeather/>\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./TodayData.css\";\nimport WeeklyData from \"../WeeklyData/WeeklyData\";\nimport GetGraph from \"../GetGraph/GetGraph\";\nimport WeatherData from \"../../WeatherData\";\n\n// Get the information regarding the today's weather.\nclass TodayData extends React.Component {\n  render() {\n    return (\n      <div className=\"container weatherData w-100 border rounded\">\n        <div className=\"row currentCity justify-content-left\">\n          {this.props.city}, {this.props.country}\n        </div>\n        <div className=\"row currentDay\">\n          {this.props.weekday} {this.props.time}\n        </div>\n        <div className=\"row currentDesc justify-content-left\">\n          {this.props.weatherDescription}\n        </div>\n        <div className=\"row currentTemp justify-content-left\">\n          <img src={this.props.weatherIcon} alt=\"\" />\n          {this.props.temp}\n          <span className=\"celsius\">&#x2103;</span>\n        </div>\n        {this.props.noMore?null:   <GetGraph forecast3hrs={this.props.forecast3hrs} />}\n       <div className=\"d-flex\" style={{justifyContent:'space-between'}}>\n         \n    {this.props.noMore?null:  \n    \n    <>\n     <WeatherData/>\n       <WeatherData/>\n       <WeatherData/>\n       <WeatherData/>\n       <WeatherData/>\n       <WeatherData/>\n       <WeatherData/>\n       <WeatherData/>\n       </>}\n       </div>\n        <WeeklyData forecastWeekly={this.props.forecastWeekly} />\n      </div>\n    );\n  }\n}\n\nexport default TodayData;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport weatherApi from \"../util/weatherApi\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport TodayData from \"../TodayData/TodayData\";\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstTime: true,\n      city: \"\",\n      weekday: \"\",\n      temp: \"\",\n      weatherDescription: \"\",\n      weatherIcon: \"\",\n      country: \"\",\n      timezone: \"\",\n      time: \"\",\n      forecast3hrs: [],\n      forecastWeekly: []\n    };\n    this.search = this.search.bind(this);\n  }\n\n  //Update today data as sync mode\n  updateTodayState = data => {\n    this.setState(\n      {\n        firstTime: false,\n        temp: data.temp,\n        weatherDescription: data.weatherDescription,\n        weatherIcon: data.weatherIcon,\n        country: data.country,\n        timezone: data.timezone,\n        dateTime: data.dateTime,\n        time: data.time,\n        weekday: data.weekday,\n        city: data.city\n      },\n      () => {}\n    );\n  };\n\n  //Update weekly data as sync mode\n  updateWeeklyState = data => {\n    this.setState(\n      {\n        forecastWeekly: data,\n        forecast3hrs: data.slice(0, 8)\n      },\n      () => {}\n    );\n  };\n\n  //Search the weather based on the city\n  search(term) {\n    //Get today data\n    weatherApi.getTodayData(term).then(data => this.updateTodayState(data));\n    //Show the forecast for the next 24 hours, each 3 hours\n    weatherApi.get3HoursData(term).then(data => this.updateWeeklyState(data));\n  }\n\n  warningBanner() {\n    if (this.state.firstTime) {\n      return null;\n    }\n\n    return (\n      <div className=\"warningBanner\">\n        We couldn’t find any results. Try checking your spelling.\n      </div>\n    );\n  }\n\n  //Identify if there is data to display\n  displayResult() {\n    if ((typeof this.state.city === \"undefined\") | (this.state.city === \"\")) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        { this.props.noMore ?null:<div className=\"navbar-main\" >\n          <h1>Weather</h1>\n        </div>}\n        <SearchBar onSearch={this.search} updateTerm={this.updateTerm} />\n        {this.displayResult() ? (\n          <TodayData\n            noMore={this.props.noMore}\n            city={this.props.city}\n            country={this.props.countryCode}\n            temp={this.state.temp}\n            time={this.state.time}\n            weekday={this.state.weekday}\n            weatherDescription={this.state.weatherDescription}\n            weatherIcon={this.state.weatherIcon}\n            forecast3hrs={this.state.forecast3hrs}\n            forecastWeekly={this.state.forecastWeekly}\n          />\n        ) : (\n          this.warningBanner()\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n","import React from 'react';\n\nfunction SelectedMarkers(props) {\n  const { markers } = props;\n  return (\n    <article className=\"panel is-primary\">\n      <p className=\"panel-heading\">\n        Markers\n      </p>\n      {\n        markers.length > 0 && markers.map(marker => (\n          <div className=\"panel-block is-active\">\n            <span className=\"panel-icon\">\n              <i className=\"fas fa-map-marker\" aria-hidden=\"true\"></i>\n            </span>\n            {/* <span><strong>{marker.title}:</strong></span>\n            <span style={{ marginLeft: 5 }}>{`lat: ${marker.position.lat()} - long: ${marker.position.lng()}`}</span> */}\n          </div>\n        ))\n      }\n      \n    </article>\n  )\n}\n\nexport default SelectedMarkers;","import React, { useState, useRef, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport SelectedMarkers from './SelectedMarkers';\nimport axios from \"axios\";\nfunction CustomGoogleMap(props) {\n  const [mapMarkers, setMapMarkers] = useState([]);\n  const mapMarkersRef = useRef(mapMarkers);\n  const previousMarkersRef = useRef([]);\n  const mapRef = useRef();\n  const drawingManagerRef = useRef();\n  const [currentPolygon, setCurrentPolygon] = useState(null)\n  const [data, setData] = useState(null)\n  const [dataWeather, setDataWeather] = useState(null)\n  function setMapMarkersRef(data) {\n    // mapMarkersRef.current = data;\n    //  setMapMarkers(data);\n  }\n\n  async function postData(url = '', data ) {\n    let dataC = JSON.stringify(data)\n  //  alert(dataC)\n    const options = {\n      method: 'GET',\n      url: 'https://api.ambeedata.com/latest/by-lat-lng',\n      params: JSON.parse(dataC),\n      headers: {'x-api-key': '73adc3f9bac7b975765041223b6c3b6f7c23e2bb7c09ca7dfef3a8728ed69c7f', 'Content-type': 'application/json'}\n    };\n    axios.request(options).then(function (response) {\n    // alert(JSON.stringify(response))\n      setData(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n  async function getData(url = '', data ) {\n    let dataC = JSON.stringify(data)\n  //  alert(dataC)\n    const options = {\n      method: 'GET',\n      url: 'https://api.ambeedata.com/weather/latest/by-lat-lng',\n      params: JSON.parse(dataC),\n      headers: {'x-api-key': '73adc3f9bac7b975765041223b6c3b6f7c23e2bb7c09ca7dfef3a8728ed69c7f', 'Content-type': 'application/json'}\n    };\n    axios.request(options).then(function (response) {\n    // alert(JSON.stringify(response))\n    setDataWeather(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n\n\nuseEffect(()=>{\n\n  props.getInfo(data);\n  //alert(JSON.stringify(props))\n\n},[data])\nuseEffect(()=>{\n\n  props.getWeather(dataWeather);\n},[dataWeather])\n\n\n  function _initDefaultMarkers(google, coord) {\n    var myLatLng = { lat: coord.lat, lng: coord.lng };\n    const marker = new google.maps.Marker({\n      position: myLatLng,\n      title: \"Marker 1\"\n    });\n    // marker.addListener('click', _onMarkerClick)\n    //setMapMarkersRef([marker]);\n    marker.setMap(mapRef.current);\n  }\n\n  function _onMarkerClick(marker) {\n    //  alert(`lat: ${marker.latLng.lat()} - long: $${marker.latLng.lng()}`)\n  }\n\n  function _onPolygonClick(google) {\n    return function (polygon) {\n      // Remove polygon on click\n      this.setMap(null);\n\n      // Show all markers on left side panel again after removing polygon\n      setMapMarkersRef(previousMarkersRef.current)\n      // Show all markers on map again after removing polygon\n      previousMarkersRef.current.forEach(marker => {\n        //  marker.setMap(mapRef.current)\n      });\n\n      // Revert drawing mode\n      drawingManagerRef.current.setOptions({\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: ['polygon']\n        }\n      });\n    }\n  }\n\n  function _onMarkerComplete(marker) {\n\n    marker.setTitle(`Marker ${mapMarkersRef.current.length + 1}`);\n    marker.addListener('click', _onMarkerClick)\n    const newMarkers = [...mapMarkersRef.current, marker];\n    console.log((newMarkers))\n    setMapMarkersRef(newMarkers);\n  }\n  function getPaths(polygon) {\n\n    var polygonBounds = polygon.getPath();\n    var bounds = [];\n    for (var i = 0; i < polygonBounds.length; i++) {\n      var point = {\n        lat: polygonBounds.getAt(i).lat(),\n        lng: polygonBounds.getAt(i).lng()\n      };\n      bounds.push(point);\n    }\n    return bounds\n  }\n\n\n  function _onPolygonComplete(google) {\n    return async function (polygon) {\n      setCurrentPolygon(polygon)\n      var polygonCoords = []\n      var bounds = new google.maps.LatLngBounds();\n      let coords = (getPaths(polygon))\n      console.log(coords)\n      coords.map((data) => {\n        polygonCoords.push(new google.maps.LatLng(data.lat, data.lng),)\n      })\n\n      for (let i = 0; i < polygonCoords.length; i++) {\n        bounds.extend(polygonCoords[i]);\n      }\n      let center = bounds.getCenter();\n      console.log(JSON.stringify(center.coor))\n   \n      var myLatLng = center;\n      const marker = new google.maps.Marker({\n        position: myLatLng,\n        title: \"Marker 1\"\n      });\n      marker.setMap(mapRef.current);\n     polygon.addListener('click', _onPolygonClick(google));\n      //  previousMarkersRef.current = mapMarkersRef.current;\n  \n      drawingManagerRef.current.setOptions({\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes:  ['polygon']\n        }\n      });\n      drawingManagerRef.current.setDrawingMode(null);\n\n     await postData('https://api.ambeedata.com/latest/by-lat-lng', myLatLng)\n     await getData('https://api.ambeedata.com/latest/by-lat-lng', myLatLng)\n     \n  .then(data => {\n   // alert(JSON.stringify(data)); // JSON data parsed by `data.json()` call\n  })\n     //   alert( JSON.stringify( postData(,JSON.stringify(myLatLng))))\n\n    }\n    \n  }\n\n  function _createGoogleMapDrawingManager(google) {\n    const drawingManager = new google.maps.drawing.DrawingManager({\n      //drawingMode: google.maps.drawing.OverlayType.MARKER,\n      drawingControl: true,\n      drawingControlOptions: {\n        position: google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: ['polygon']\n      },\n      polygonOptions: {\n        fillColor: '#000000',\n        fillColor: 'green',\n        fillOpacity: 0.5,\n        strokeWeight: 3,\n        editable: true,\n        zIndex: 1\n      }\n    });\n\n    return drawingManager;\n  }\n\n  function _onGoogleApiLoaded(google) {\n    const map = google.map\n    mapRef.current = map;\n    const drawingManager = _createGoogleMapDrawingManager(google);\n    drawingManagerRef.current = drawingManager;\n\n    //  google.maps.event.addListener(drawingManager, 'markercomplete', _onMarkerComplete);\n    google.maps.event.addListener(drawingManager, 'polygoncomplete', _onPolygonComplete(google));\n    drawingManager.setMap(map);\n\n    // _initDefaultMarkers(google)\n  }\n\n\n  return (\n    <div style={{ width: '100%', margin: '0 auto' }}>\n      <div className=\"columns\">\n        <div className=\"column\" style={{ height:props.height }}>\n          \n          <GoogleMapReact\n\n            bootstrapURLKeys={{ key: 'AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo', libraries: ['drawing', 'geometry'].join(','), }}\n            defaultCenter={props.center}\n            defaultZoom={props.zoom}\n            yesIWantToUseGoogleMapApiInternals\n            onGoogleApiLoaded={_onGoogleApiLoaded} />\n        </div>\n       \n      </div>\n    </div>\n  )\n}\n\nCustomGoogleMap.defaultProps = {\nheight:500,\n  center: {\n    lat: 40.69276097550692,\n    lng: -4.7392\n  },\n  zoom: 5\n}\n\nexport default CustomGoogleMap;"],"sourceRoot":""}