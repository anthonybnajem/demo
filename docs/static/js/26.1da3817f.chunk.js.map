{"version":3,"sources":["hooks/useScriptRef.js","views/auth/signin/FirebaseLogin.js","views/auth/signin/SignIn1.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","FirebaseLogin","className","rest","scriptedRef","useAuth","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","googleHandler","a","console","error","Fragment","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","label","name","onBlur","onChange","type","value","class","Col","sm","Alert","variant","id","htmlFor","Row","mt","Button","color","disabled","size","onClick","Signin1","Breadcrumb","Card","Body","to","text","as","Link"],"mappings":"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","file":"static/js/26.1da3817f.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nconst useScriptRef = () => {\n  const scripted = useRef(true);\n\n  useEffect(\n    () => () => {\n      scripted.current = false;\n    },\n    []\n  );\n\n  return scripted;\n};\n\nexport default useScriptRef;\n","import React from 'react';\nimport { Row, Col, Button, Alert } from 'react-bootstrap';\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport useAuth from '../../../hooks/useAuth';\nimport useScriptRef from '../../../hooks/useScriptRef';\n\nconst FirebaseLogin = ({ className, ...rest }) => {\n  const scriptedRef = useScriptRef();\n\n  const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\n\n  const googleHandler = async () => {\n    try {\n      await firebaseGoogleSignIn();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={{\n          email: 'demo@gmail.com',\n          password: '123456',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n          password: Yup.string().max(255).required('Password is required')\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await firebaseEmailPasswordSignIn(values.email, values.password);\n\n            if (scriptedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(true);\n            }\n          } catch (err) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit} className={className} {...rest}>\n            <div className=\"form-group mb-3\">\n              <input\n                className=\"form-control\"\n                error={touched.email && errors.email}\n                label=\"Email Address / Username\"\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"email\"\n                value={values.email}\n              />\n              {touched.email && errors.email && <small class=\"text-danger form-text\">{errors.email}</small>}\n            </div>\n            <div className=\"form-group mb-4\">\n              <input\n                className=\"form-control\"\n                error={touched.password && errors.password}\n                label=\"Password\"\n                name=\"password\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n              />\n              {touched.password && errors.password && <small class=\"text-danger form-text\">{errors.password}</small>}\n            </div>\n\n            {errors.submit && (\n              <Col sm={12}>\n                <Alert variant=\"danger\">{errors.submit}</Alert>\n              </Col>\n            )}\n\n            <div className=\"custom-control custom-checkbox  text-left mb-4 mt-2\">\n              <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n              <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n                Save credentials.\n              </label>\n            </div>\n\n            <Row>\n              <Col mt={2}>\n                <Button className=\"btn-block\" color=\"primary\" disabled={isSubmitting} size=\"large\" type=\"submit\" variant=\"primary\">\n                  Signin\n                </Button>\n              </Col>\n            </Row>\n          </form>\n        )}\n      </Formik>\n\n      <Row>\n        <Col sm={12}>\n          <h5 className=\"my-3\"> OR </h5>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col sm={12}>\n          <Button onClick={googleHandler} variant=\"danger\">\n            <i className=\"fa fa-lock\" /> Sign in with Google\n          </Button>\n        </Col>\n      </Row>\n\n      <hr />\n    </React.Fragment>\n  );\n};\n\nexport default FirebaseLogin;\n","import React from 'react';\nimport { Card, Button, Alert } from 'react-bootstrap';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport Breadcrumb from '../../../layouts/AdminLayout/Breadcrumb';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport FirebaseLogin from './FirebaseLogin';\n\nconst Signin1 = () => {\n  return (\n    <React.Fragment>\n      <Breadcrumb />\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-content\">\n          <div className=\"auth-bg\">\n            <span className=\"r\" />\n            <span className=\"r s\" />\n            <span className=\"r s\" />\n            <span className=\"r\" />\n          </div>\n          <Card className=\"borderless text-center\">\n            <Card.Body>\n              <div className=\"mb-4\">\n                <i className=\"feather icon-unlock auth-icon\" />\n              </div>\n              <FirebaseLogin />\n              <p className=\"mb-2 text-muted\">\n                Forgot password?{' '}\n                <NavLink to=\"/auth/reset-password-1\" className=\"f-w-400\">\n                  Reset\n                </NavLink>\n              </p>\n              <p className=\"mb-0 text-muted\">\n                Donâ€™t have an account?{' '}\n                <NavLink to=\"/auth/signup-1\" className=\"f-w-400\">\n                  Signup\n                </NavLink>\n              </p>\n              <Alert variant=\"primary\" className=\"text-left mt-3\">\n                Username:\n                <CopyToClipboard text=\"demo@gmail.com\">\n                  <Button variant=\"outline-primary\" as={Link} to=\"#\" className=\"badge mx-2 mb-2\" size=\"sm\">\n                    {' '}\n                    <i className=\"fa fa-user mr-1\" /> demo@gmail.com{' '}\n                  </Button>\n                </CopyToClipboard>\n                <br />\n                Password:\n                <CopyToClipboard text=\"123456\">\n                  <Button variant=\"outline-primary\" as={Link} to=\"#\" className=\"badge mx-2\" size=\"sm\">\n                    {' '}\n                    <i className=\"fa fa-lock mr-1\" /> 123456{' '}\n                  </Button>\n                </CopyToClipboard>\n              </Alert>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Signin1;\n"],"sourceRoot":""}